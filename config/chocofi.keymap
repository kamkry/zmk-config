// https://nickcoutsos.github.io/keymap-editor/

#define BASE 0
#define NAV 1
#define NUM 2
#define FUN 3
#define MEDIA 4
#define HM_TAPPING_TERM 280
#define HM_TAPPING_TERM_FAST 200
#define HM_PRIOR_IDLE 150
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4
#define KEYS_T LH2 LH1 LH0 RH0 RH1 RH2

#include "zmk-helpers/key-labels/36.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    tapping-term-ms = <200>;
    quick-tap-ms = <175>;
    flavor = "balanced";
    require-prior-idle-ms = <150>;
};

&sk {
    quick-release;
};

/ {
    behaviors {
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <KEYS_R KEYS_T 5 6 7 8 9 19 15 16 17 18 19 25 26 27 28 29 33 34 35 30 31 32>;
            hold-trigger-on-release;
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <KEYS_L KEYS_T 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33 34 35>;
            hold-trigger-on-release;
        };


        hm_shift_l: hm_shift_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <KEYS_R KEYS_T 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35 30 31 32>;

        };

        hm_shift_r: hm_shift_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <KEYS_L KEYS_T 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33 34 35>;

        };

        capsshift: capsshift {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPSSHIFT";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&caps_word>;
        };
    };
};

/ {
    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "base";
            bindings = <
&kp Q               &kp W         &kp E            &kp R            &kp T          &kp Y        &kp U               &kp I             &kp O           &kp P
&kp A               &kp S         &kp D            &kp F            &kp G          &kp H        &kp J               &kp K             &kp L           &kp SEMI
&hm_l LEFT_SHIFT Z  &hm_l LCMD X  &hm_l LALT C     &hm_l LCTRL V    &lt 2 B        &kp N        &hm_r RCTRL M       &hm_r RALT COMMA  &hm_r RCMD DOT  &hm_r RSHIFT SLASH
                                  &kp RIGHT_SHIFT  &mt LCMD ESCAPE  &lt 1 SPACE    &lt 2 ENTER  &mt RALT BACKSPACE  &lt 4 TAB
            >;
        };

        nav {
            display-name = "nav";
            bindings = <
&trans     &trans    &trans    &trans      &trans    &trans     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL  &kp MINUS
&sk LCTRL  &sk LALT  &sk LCMD  &sk LSHIFT  &trans    &kp LEFT   &kp DOWN              &kp UP                 &kp RIGHT  &kp SINGLE_QUOTE
&trans     &trans    &trans    &trans      &trans    &kp GRAVE  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans     &kp BACKSLASH
                     &trans    &trans      &trans    &trans     &kp DELETE            &trans
            >;
        };

        num {
            display-name = "num";
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &kp N7  &kp N8  &kp N9  &kp N0
&trans  &trans  &trans  &trans  &trans    &trans  &kp N4  &kp N5  &kp N6  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &kp N1  &kp N2  &kp N3  &trans
                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        fn {
            display-name = "fn";
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans    &trans  &kp F4  &kp F5  &kp F6  &kp F11
&trans  &trans  &trans  &trans  &trans    &trans  &kp F1  &kp F2  &kp F3  &kp F12
                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        media {
            display-name = "media";
            bindings = <
&sys_reset         &studio_unlock  &trans  &trans         &trans    &trans          &trans             &trans           &trans      &trans
&ext_power EP_TOG  &trans          &trans  &trans         &trans    &kp C_PREVIOUS  &kp K_VOLUME_DOWN  &kp K_VOLUME_UP  &kp C_NEXT  &trans
&bt BT_CLR         &trans          &trans  &trans         &trans    &trans          &kp SLCK           &kp PAUSE_BREAK  &trans      &trans
                                   &trans  &kp LC(LG(Q))  &trans    &bt BT_SEL 0    &bt BT_SEL 1       &trans
            >;
        };

        sym {
            bindings = <
&trans  &kp LESS_THAN  &kp GREATER_THAN  &trans  &trans    &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL  &kp MINUS
&trans  &trans         &trans            &trans  &trans    &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans     &trans
&trans  &kp GRAVE      &kp BACKSLASH     &trans  &trans    &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans     &trans
                       &trans            &trans  &trans    &trans  &trans                &trans
            >;
        };
    };
};
